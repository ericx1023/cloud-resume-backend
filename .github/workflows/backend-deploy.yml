name: Backend CI/CD

on:
  push:
    branches: [ main, master ]
    paths:
      - 'backend/**'
      - 'infrastructure/**'
      - 'tests/**'
      - '.github/workflows/backend-deploy.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'backend/**'
      - 'infrastructure/**'
      - 'tests/**'
      - '.github/workflows/backend-deploy.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest boto3 moto
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
      
      - name: Run tests
        run: |
          pytest tests/
  
  deploy:
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install aws-sam-cli
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: SAM build
        run: |
          cd infrastructure
          sam build
          
      - name: SAM deploy
        run: |
          cd infrastructure
          sam deploy --stack-name cloud-resume-challenge-backend --no-confirm-changeset --no-fail-on-empty-changeset
          
      - name: Get API Gateway URL
        run: |
          cd infrastructure
          API_URL=$(aws cloudformation describe-stacks --stack-name cloud-resume-challenge-backend --query "Stacks[0].Outputs[?OutputKey=='VisitorCounterApi'].OutputValue" --output text)
          echo "API Gateway URL: $API_URL"
          echo "API_URL=$API_URL" >> $GITHUB_ENV 